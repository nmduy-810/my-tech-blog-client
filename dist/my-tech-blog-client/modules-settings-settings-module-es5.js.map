{"version":3,"sources":["webpack:///src/app/modules/settings/settings-routing.module.ts","webpack:///src/app/modules/settings/settings.component.ts","webpack:///src/app/modules/settings/settings.component.html","webpack:///src/app/modules/settings/settings.module.ts"],"names":["routes","path","component","canActivate","SettingsRoutingModule","forChild","SettingsComponent","router","userService","fb","user","errors","isSubmitting","settingsForm","group","username","bio","email","password","console","log","getCurrentUser","Object","assign","patchValue","purgeAuth","navigateByUrl","updateUser","value","update","subscribe","error","values","submitForm","logout","SettingsModule"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,qEAFb;AAGEC,mBAAW,EAAE,CAAC,kFAAD;AAHf,OADqB,CAAvB;;UAYaC,qB;;;;;cAAAA;;;;2BAAAA,qB;AAAqB,S;AAAA,kBAHvB,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CAGuB,EAFtB,4DAEsB;;;;4HAArBI,qB,EAAqB;AAAA;AAAA,oBAFtB,4DAEsB;AAAA,S;AAFV,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCHXE,iB;AAMX,mCAAoBC,MAApB,EAA4CC,WAA5C,EAA8EC,EAA9E,EAA+F;AAAA;;AAA3E,eAAAF,MAAA,GAAAA,MAAA;AAAwB,eAAAC,WAAA,GAAAA,WAAA;AAAkC,eAAAC,EAAA,GAAAA,EAAA;AAL9E,eAAAC,IAAA,GAAa,EAAb;AAEA,eAAAC,MAAA,GAAiB;AAACA,kBAAM,EAAE;AAAT,WAAjB;AACA,eAAAC,YAAA,GAAe,KAAf,CAE+F,CAC7F;;AACA,eAAKC,YAAL,GAAoB,KAAKJ,EAAL,CAAQK,KAAR,CAAc;AAChCC,oBAAQ,EAAE,EADsB;AAEhCC,eAAG,EAAE,EAF2B;AAGhCC,iBAAK,EAAE,EAHyB;AAIhCC,oBAAQ,EAAE;AAJsB,WAAd,CAApB;AAMD;;;;iBAED,oBAAQ;AACN;AACAC,mBAAO,CAACC,GAAR,CAAY,KAAKZ,WAAL,CAAiBa,cAAjB,EAAZ;AAEAC,kBAAM,CAACC,MAAP,CAAc,KAAKb,IAAnB,EAAyB,KAAKF,WAAL,CAAiBa,cAAjB,EAAzB,EAJM,CAMN;;AACA,iBAAKR,YAAL,CAAkBW,UAAlB,CAA6B,KAAKd,IAAlC;AACD;;;iBAED,kBAAS;AACP,iBAAKF,WAAL,CAAiBiB,SAAjB;AACA,iBAAKlB,MAAL,CAAYmB,aAAZ,CAA0B,GAA1B;AACD;;;iBAED,sBAAa;AAAA;;AACX,iBAAKd,YAAL,GAAoB,IAApB;AAEA,iBAAKe,UAAL,CAAgB,KAAKd,YAAL,CAAkBe,KAAlC;AAEA,iBAAKpB,WAAL,CAAiBqB,MAAjB,CAAwB,KAAKnB,IAA7B,EAAmCoB,SAAnC,CAA6C,UAAAH,UAAU;AAAA,qBAAI,KAAI,CAACpB,MAAL,CAAYmB,aAAZ,CAA0B,UAAUC,UAAU,CAACZ,QAA/C,CAAJ;AAAA,aAAvD,EACA,UAAAgB,KAAK,EAAI;AACP,mBAAI,CAACpB,MAAL,GAAcoB,KAAd;AACA,mBAAI,CAACnB,YAAL,GAAoB,KAApB;AACD,aAJD;AAKD;;;iBAED,oBAAWoB,MAAX,EAA2B;AACzBV,kBAAM,CAACC,MAAP,CAAc,KAAKb,IAAnB,EAAyBsB,MAAzB;AACD;;;;;;;yBA7CU1B,iB,EAAiB,uH,EAAA,+I,EAAA,2H;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,2tB;AAAA;AAAA;ACZ9B;;AACE;;AACE;;AACE;;AAAiC;AAAA,qBAAY,IAAA2B,UAAA,EAAZ;AAAwB,aAAxB;;AAG/B;;AACE;;AACF;;AAIA;;AAGE;;AACE;;AACE;;AACA;;AACF;;AACF;;AAGA;;AACE;;AACE;;AACA;;AACF;;AACF;;AAGA;;AACE;;AACE;;AACA;;AACF;;AACF;;AAGA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAGA;;AAEA;;AACE;;AAAmC;AAAA,qBAAS,IAAAC,MAAA,EAAT;AAAiB,aAAjB;;AACjC;;AACF;;AACF;;AAEF;;AACF;;AACF;;AACF;;;;AAvDY;;AAAA;;AASM;;AAAA;;;;;;;;;;;;;;;;;;;;;ACXlB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaaC,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,kBARd,CACL,yEADK,EAEL,8EAFK,CAQc;;;;4HAAdA,c,EAAc;AAAA,yBAHnB,qEAGmB;AAHF,oBAJjB,yEAIiB,EAHjB,8EAGiB;AAGE,S;AANE,O","file":"modules-settings-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from 'src/app/core/services/auth-guard.service';\nimport { SettingsComponent } from './settings.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Errors } from 'src/app/core/models/errors.model';\nimport { User } from 'src/app/core/models/user.model';\nimport { UserService } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  user: User = {} as User;\n  settingsForm!: FormGroup;\n  errors: Errors = {errors: {}};\n  isSubmitting = false;\n\n  constructor(private router: Router, private userService: UserService, private fb: FormBuilder) { \n    // create form group using the form builder\n    this.settingsForm = this.fb.group({ \n      username: '',\n      bio: '',\n      email: '',\n      password: ''\n    });\n  }\n\n  ngOnInit(): void {\n    //Copy of the current user object to place in editable form fields\n    console.log(this.userService.getCurrentUser());\n\n    Object.assign(this.user, this.userService.getCurrentUser());\n    \n    //Pass value of user to form field\n    this.settingsForm.patchValue(this.user);\n  }\n\n  logout() {\n    this.userService.purgeAuth();\n    this.router.navigateByUrl('/');\n  }\n\n  submitForm() {\n    this.isSubmitting = true;\n\n    this.updateUser(this.settingsForm.value);\n\n    this.userService.update(this.user).subscribe(updateUser => this.router.navigateByUrl('/home' + updateUser.username),\n    error => {\n      this.errors = error;\n      this.isSubmitting = false;\n    });\n  }\n\n  updateUser(values: Object) {\n    Object.assign(this.user, values);\n  }\n\n}\n","<div class=\"limiter\">\n  <div class=\"container-login100\">\n    <div class=\"wrap-login100 p-t-50 p-b-90\">\n      <form [formGroup]=\"settingsForm\" (ngSubmit)=\"submitForm()\">\n\n        <!--Title-->\n        <span class=\"login100-form-title p-b-51\">\n          Your Settings\n        </span>\n\n        <!-- <app-list-errors [errors]=\"errors\"></app-list-errors> -->\n\n        <fieldset [disabled]=\"isSubmitting\">\n\n          <!--User name-->\n          <fieldset class=\"form-group\">\n            <div class=\"wrap-input100 validate-input m-b-16\">\n              <input class=\"input100 form-control\" formControlName=\"username\" placeholder=\"Username\" type=\"text\">\n              <span class=\"focus-input100\"></span>\n            </div>\n          </fieldset>\n\n          <!--Email-->\n          <fieldset class=\"form-group\">\n            <div class=\"wrap-input100 validate-input m-b-16\">\n              <input class=\"input100 form-control\" formControlName=\"email\" placeholder=\"Email\" type=\"email\">\n              <span class=\"focus-input100\"></span>\n            </div>\n          </fieldset>\n\n          <!--New password-->\n          <fieldset class=\"form-group\">\n            <div class=\"wrap-input100 validate-input m-b-16\">\n              <input class=\"input100 form-control\" formControlName=\"password\" placeholder=\"New password\" type=\"password\">\n              <span class=\"focus-input100\"></span>\n            </div>\n          </fieldset>\n\n          <!--Button-->\n          <div class=\"container-login100-form-btn m-t-17\">\n            <button class=\"login100-form-btn\" type=\"submit\">\n              Update Settings\n            </button>\n          </div>\n        </fieldset>\n\n        <!-- Line break for logout button -->\n        <hr />\n\n        <div class=\"container-login100-form-btn m-t-17\">\n          <button class=\"btn-outline-danger\" (click)=\"logout()\">\n            Or click here to logout.\n          </button>\n        </div>\n\n      </form>  \n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsComponent } from './settings.component';\n\n@NgModule({\n    imports: [\n        SharedModule,\n        SettingsRoutingModule\n    ],\n    declarations: [\n        SettingsComponent\n    ]\n})\nexport class SettingsModule {}"]}